// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Event {
  id               String  @id @default(uuid()) //Define a coluna 'id', do tipo String, sendo a chave primária (@id) e com valor default sendo um UUID
  title            String
  details          String? // ? define a coluna como sendo opcional
  slug             String  @unique // 1 @ configura colunas, 2 @ configuram tabelas
  maximumAttendees Int?    @map("maximum_attendees")

  attendees Attendee[]

  @@map("events") //Renomeia o nome da tabela, com letra minúscula e no plural
}

model Attendee {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  createdAt DateTime @default(now()) @map("created_at") // Data e hora atuais do momento da criação do participante
  eventId   String   @map("event_id")

  event   Event    @relation(fields: [eventId], references: [id], onDelete: Cascade) // Relacionamentos no Prisma
  checkIn CheckIn? // O relacionamento é de 1 para 1, por isso tiramos os colchetes. A ? significa que essa coluna pode ser nula

  @@unique([eventId, email])
  @@map("attendees")
}

model CheckIn {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")

  attendee   Attendee @relation(fields: [attendeeId], references: [id], onDelete: Cascade) // Ao deletar um participante, seu check in também é apagado
  attendeeId Int      @unique @map("attendee_id")

  @@map("check_ins")
}
